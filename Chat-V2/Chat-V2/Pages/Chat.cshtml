@page
@model Chat_V2.Pages.ChatModel
@{
    ViewData["Title"] = "Chat";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">&nbsp;</div>
        <div id="messages-list" class="col-6" style="overflow-y: scroll">
            <div class="message">
                <span class="message-header">&lt;Example Header&gt;: </span>
                <span class="message-content">Example Message</span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">&nbsp;</div>
        <div class="col-6">
            <input type="text" id="messageInput" />
        </div>
    </div>
</div>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript">
    "use strict";

    //SignalR connection
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();
    
    //What to do when the connection is established
    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
        console.log("connected");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    //Recieve Message
	connection.on("ReceiveMessage", function (username, message) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = "<" + username + ">: " + msg;
        var li = document.createElement("span");
        li.textContent = encodedMsg;
        document.getElementById("messagesList").appendChild(li);
    });

    //Send Message
    document.getElementById("messageInput").addEventListener("keyup", function (event) {
        if (event.keyCode == 13) {
            var user = '@(Model.ViewModel.ChatUser.Id)';
            var message = document.getElementById("messageInput").value;
            connection.invoke("SendMessageToAll", user, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        }
    });
</script>
