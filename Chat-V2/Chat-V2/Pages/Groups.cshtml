@page
@model Chat_V2.Pages.GroupsModel
@{
    ViewData["Title"] = "Groups";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Groups</h1>

<p>
    <a asp-page="./CreateGroup">Create New</a>
</p>

<form asp-page="./Groups" method="get">
    <div class="input-group">
        <input type="text" name="SearchString" value="@Model.CurrentFilter" placeholder="Find by name" />
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Find</button>
        </div>
    </div>
</form>

<br />

<form asp-page="./Group" method="get">
    <div class="input-group">
        <input type="text" name="groupId" placeholder="Find by ID" />
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Find</button>
        </div>
    </div>
</form>

<br />

@if (!string.IsNullOrEmpty(Model.CurrentFilter)) {
    <a asp-page="./Groups">Back to full List</a>
}

<br />

<table class="table">
    <thead>
        <tr>
            <th>
                Avatar
            </th>
            <th>
                <a asp-page="./Groups" asp-route-sortOrder="@Model.IdSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Groups[0].GroupID)
                </a>
            </th>
            <th>
                <a asp-page="./Groups" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Groups[0].Name)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Groups) {
            <tr>
                <td>
                    <img src="@(FileTools.FileSavePath + item.GroupImage)" width="64" height="64" class="img-thumbnail" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-page="/Group" asp-route-groupId="@item.GroupID">View</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Groups.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Groups.HasNextPage ? "disabled" : "";
}

<a asp-page="./Groups"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Groups.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Groups"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Groups.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>